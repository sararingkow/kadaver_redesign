---
// Fetches all card-data via Supabase API
export async function getStaticPaths() {
  const url = "https://iwqejxdoyvguvkbjlqrq.supabase.co/rest/v1/listview_cards";
  const options = {
    headers: {
      apikey:
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml3cWVqeGRveXZndXZrYmpscXJxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk5MDgyMTksImV4cCI6MjA1NTQ4NDIxOX0.uGOrCj2BHaecpyauDJEjv-iZfytL2pUg0wVzj8YLsN0",
    },
  };
  const response = await fetch(url, options);
  const cards = await response.json();

  return cards.map((card) => {
    return {
      params: { slug: card.slug },
      props: { card, allCards: cards },
    };
  });
}

const { card, allCards } = Astro.props;

// Finds the next and previous cards in the array
const currentIndex = allCards.findIndex((c) => c.slug === card.slug);
const prevCard = currentIndex > 0 ? allCards[currentIndex - 1] : null;
const nextCard = currentIndex < allCards.length - 1 ? allCards[currentIndex + 1] : null;

// Checks if the image is a video or not, and sets the appropriate class
const isVideo =
  typeof card.image_header === "string" &&
  (card.image_header.endsWith(".mp4") || card.image_header.endsWith(".webm") || card.image_header.endsWith(".ogg"));

// Removes the images, based on the card-data from the API
const images = [card.image1, card.image2, card.image3, card.image4, card.image5, card.image6].filter((image) => image); // Removes undefined/null values

import MainLayout from "../layouts/MainLayout.astro";
import Carousel from "../components/Carousel.astro";
import Button from "../components/Button.astro";
import "../styles/tobii.min.css";
---

<MainLayout
  title={`Kadaver | ${card.title}`}
  description={`Kadaver - ${card.title}`}
  ogtitle={`Kadaver - ${card.subtitle}`}
  ogdescription={`Kadaver's arbejde for ${card.subtitle}`}
>
  <section class="max-w-7xl md:mt-desktop-top md:mb-desktop-bottom mb-mobil-bottom mx-auto md:px-0 px-8 z-20 grid grid-cols-12">
    <div class="col-span-12 md:pb-16 pb-8">
      <h1 class="md:text-h2-desktop text-h2-mobile md:mt-28 mt-16 md:mb-4 mb-2">{card.title}</h1>
      <h2 class="md:text-h3-desktop text-h4-mobile text-gray-500 md:mt-4 mt-0 md:mb-2 mb-0">{card.subtitle}</h2>
    </div>
    <div class="flex md:flex-row flex-col col-span-12 gap-8">
      <div class="md:w-[700px] w-full">
        {
          isVideo ? (
            <video src={card.image_header} class="rounded-sm shadow-drop25 w-full md:w-[700px] h-[450px] object-cover" controls />
          ) : (
            <a href={card.image_header} class="lightbox w-full md:w-[700px] h-[450px] object-cover rounded-sm">
              <img src={card.image_header} alt={card.title} class="rounded-sm shadow-drop25 w-full md:w-[700px] h-[450px] object-cover" />
            </a>
          )
        }
      </div>
      <div class="md:pl-8 pl-0 md:mt-0 mt-8 flex flex-col">
        <h2 class="md:text-h3-desktop text-h3-mobile">Detaljer</h2>
        <hr class="shadow-drop25 border-blue-700 border-4 mb-8 mt-2 md:w-[185px] w-[150px]" />
        <h3 class="md:text-h4-desktop text-h4-mobile">Type:</h3>
        <p class="md:max-w-[700px]">{card.type}</p>
        <h3 class="md:text-h4-desktop text-h4-mobile md:mt-8 mt-4">Målgruppe:</h3>
        <p>{card.group}</p>
        <h3 class="md:text-h4-desktop text-h4-mobile md:mt-8 mt-4">Medier:</h3>
        <p>{card.media}</p>
      </div>
    </div>

    <!-- Navigation Arrows -->
    <div class="arrows z-30 fixed top-[5.5rem] md:top-[6.5rem] right-[18px] md:right-[5.25rem] flex flex-col items-end gap-4 col-span-12">
      <div class="flex justify-between items-center md:mt-7 mt-0 gap-8 bg-transparent backdrop-blur-sm p-2 rounded-sm w-fit">
        {
          prevCard && (
            <a href={`/${prevCard.slug}`} class="hover:opacity-50 hover:underline transition duration-300 ease-in-out flex items-center">
              ← {prevCard.title}
            </a>
          )
        }
        {
          nextCard && (
            <a
              href={`/${nextCard.slug}`}
              aria-label="Næste case"
              class="hover:opacity-50 hover:underline transition duration-300 ease-in-out flex items-center ml-auto"
            >
              {nextCard.title} →
            </a>
          )
        }
      </div>
    </div>
  </section>

  {
    images.length > 0 && (
      <section class=" max-w-7xl mx-auto md:px-0 px-8 grid grid-cols-12 gap-6 md:gap-12 items-center">
        <div class="col-span-12">
          <h3 class="pb-4">Produktmateriale</h3>
          <div class="flex flex-wrap gap-4">
            <a href={images[0]} class="lightbox w-[fit-content] md:w-[60%] h-[484px] object-cover rounded-sm">
              <img src={images[0]} alt={card.title} class="w-full h-full object-cover rounded-sm" />
            </a>
            <div class="flex flex-wrap gap-4 flex-grow md:w-[38%]">
              {images.slice(1).map((image) => (
                <a href={image} class="lightbox w-[fit-content] md:w-[240px] h-auto object-cover rounded-sm">
                  <img src={image} alt={card.title} class="w-full h-full object-cover rounded-sm" />
                </a>
              ))}
            </div>
          </div>
        </div>
      </section>
    )
  }
  <section
    class="md:mt-desktop-top mt-mobil-top md:mb-desktop-bottom mb-mobil-bottom max-w-7xl mx-auto md:px-0 px-8 grid grid-cols-12 gap-6 md:gap-12 items-center"
  >
    <div class="col-span-12">
      <h3>Andre cases</h3>
      <p class="pt-4">
        Er du nysgerrig på flere? Udforsk andre cases, hvor vi har hjulpet brands med at skabe unikke og kreative løsninger,<br
          class="hidden md:block"
        />
        der fanger opmærksomheden og gør en forskel. Se hvordan vi kombinerer strategisk tænkning med kreativ udførelse<br class="hidden md:block" />
        for at opnå målbare resultater.
      </p>
      <div class="btn_container pt-8">
        <a href="/listview">
          <Button variant="primary" size="small">Gå til cases</Button>
        </a>
      </div>
      <Carousel cards={allCards} currentSlug={card.slug} />
    </div>
  </section>
</MainLayout>

<script is:inline src="/tobii.min.js"></script>
<script defer>
  const tobii = new Tobii();
</script>

<style>
  p,
  h1,
  h2,
  h3 {
    text-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25);
  }
</style>
